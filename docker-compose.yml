version: '3.9'
services:
  backend:
    image: openinfolabs/osintbuddy-backend:latest
    command: ['/bin/sh', '-c', './start-reload.sh']
    build:
      context: ./backend/backend
      dockerfile: 'backend.Dockerfile'
    volumes:
      - ./backend/backend/app:/app/
    environment:
      PYTHONDONTWRITEBYTECODE: 1
    ports:
      - 5000:80
    env_file:
      - .env
  microservice:
    image: openinfolabs/osintbuddy-microservice:latest
    build:
      context: ./backend/microservice
      dockerfile: Dockerfile
    ports:
      - 1323:1323
    env_file:
      - '.env'
  db:
    image: postgres:14.2
    volumes:
      - osintbuddy-db-data:/var/lib/postgresql/data/pgdata
    env_file:
      - .env
    ports:
      - 5432:5432
  redis:
    image: redis:latest
    ports:
      - 6379:6379
    command: redis-server
  worker:
    image: openinfolabs/osintbuddy-worker:latest
    command: /worker-start.sh
    build:
      context: ./backend/backend
      dockerfile: worker.Dockerfile
    env_file:
      - .env
  flower:
    image: mher/flower:1.2
    ports:
      - 5555:5555
    environment:
      - CELERY_BROKER_URL=redis://redis:6379//
  # jena:
  #   image: secoresearch/fuseki:4.8.0
  #   ports:
  #     - 3030:3030
  #   environment:
  #     ADMIN_PASSWORD: password
  #     ENABLE_DATA_WRITE: "true"
  #     ENABLE_UPDATE: "true"
  #     ENABLE_UPLOAD: "true"
  #     QUERY_TIMEOUT: 200000
  ui:
    image: openinfolabs/osintbuddy-frontend:latest
    build:
      context: ./frontend
    volumes:
      - ./frontend/:/app/
    ports:
      - 3000:3000
volumes:
  osintbuddy-db-data:
